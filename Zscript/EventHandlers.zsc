
class DCX_EventHandler : EventHandler
{
	TextureId TITLEPIC;
	TextureId DOOMTittle;
	TextureId UDOOMTittle;
	TextureId SIGILTittle;
	TextureId SIGIL2Tittle;
	TextureId DOOM2Tittle;
	TextureId CabalTitle;
	
	override void OnRegister()
	{
		TITLEPIC = TexMan.CheckForTexture("TITLEPIC");
		DOOMTittle =  TexMan.CheckForTexture("OGDtitle");
		UDOOMTittle =  TexMan.CheckForTexture("ULDtitle");
		SIGILTittle =  TexMan.CheckForTexture("SI6TITLE");
		SIGIL2Tittle =  TexMan.CheckForTexture("S62TITLE");
		DOOM2Tittle =  TexMan.CheckForTexture("DM2title");
		CabalTitle =  TexMan.CheckForTexture("CSTITLE");
	}
	
	override void WorldLoaded (WorldEvent e)
	{
		if ( CVar.FindCVar("dcx_TextureFixes").GetBool() )
		{ TextureFixes(); }
		if ( CVar.FindCVar("dcx_TextureEchancements").GetBool() )
		{ TextureEnchancements(); }
		if ( CVar.FindCVar("fs_toggle").GetBool() ) 
		{ DCXskyreplacement(); }
		
		CabalLevelOrder(); 
		
		Doom64Doom2Replacements();
		JaguarDoomReplacements();
		PSX0BRepalcements();		
		Wolfenstein3DTextures();
		BlankMapTransitions();
		BasePSXMapTextures();
		
	}
	
	override void RenderOverlay (RenderEvent e)
	{
		// draw an overlay of the titlepic when changing replaced levels
		if ( CVar.FindCVar("wf_compat_nextmap").GetBool() )
		{
			string mapName = Level.MapName.MakeLower();
			if ( mapName == "inter_d1e1" || mapName == "inter_d1e2" || mapName == "inter_d1e3" )
			{
					Screen.DrawTexture(DOOMTittle, false, 0, 0, DTA_FullScreen, 1);
			}
			if ( mapName == "inter_d1e4" )
			{
					Screen.DrawTexture(UDOOMTittle, false, 0, 0, DTA_FullScreen, 1);
			}
			if ( mapName == "inter_d1e5" )
			{
					Screen.DrawTexture(SIGILTittle, false, 0, 0, DTA_FullScreen, 1);
			}
			if ( mapName == "inter_d1e6" )
			{
					Screen.DrawTexture(SIGIL2Tittle, false, 0, 0, DTA_FullScreen, 1);
			}
			if ( mapName == "e4m0" || mapName == "cabalend" )
			{
					Screen.DrawTexture(TITLEPIC, false, 0, 0, DTA_FullScreen, 1);
			}			
			if ( mapName == "inter_mlcs" )
			{
					Screen.DrawTexture(CabalTitle, false, 0, 0, DTA_FullScreen, 1);
			}
		}
	}
	
	override void WorldTick()
	{
		if ( CVar.FindCVar("wf_compat_nextmap").GetBool() )
		{
			ConsoleLevelReplacement();	
		}
	}
	
	override void WorldThingSpawned(worldEvent e)
	{
		let w = Wolfensteinss(e.thing);
		if (w)
		{
			if ( Cvar.getcvar("W3D_Text_toggle").getint() >= 1 )
			w.SeeSound = "wolfss/sight2";
		}
	}
	
	void TextureFixes()
    {
		String mapPrefix = level.MapName.Left(3);
        mapPrefix = mapPrefix.MakeLower();
		String mapName = level.MapName.MakeLower();
		
		if ( mapName == "map30" )
        {
			Level.ReplaceTextures("ZZZFACE1", "RWDM304",0);
			Level.ReplaceTextures("ZZZFACE8", "RWDM309",0);
			Level.ReplaceTextures("ZZZFACE9", "RWDM3010",0);
		}
		
		if ( MapName == "ja_map25" )
		{
			Level.ChangeSky(TexMan.CheckForTexture("SKY1",TexMan.Type_Any),TexMan.CheckForTexture("SKY1",TexMan.Type_Any));
		}
	}

    void TextureEnchancements()
    {
        String mapPrefix = level.MapName.Left(3);
        mapPrefix = mapPrefix.MakeLower();
		String mapName = level.MapName.MakeLower();
		
		if ( mapName == "map30" )
        {
			Level.ReplaceTextures("RROCK08", "F_SKY1",0);			
			Level.ChangeSky(TexMan.CheckForTexture("SKYX4A",TexMan.Type_Any),TexMan.CheckForTexture("SKYX4A",TexMan.Type_Any));
		}
		
		//Animated Computer Textures
		if ( mapName.left(3) != "pt_" )
		{
			if ( mapName != "dz_map32" )
			Level.ReplaceTextures("COMPSTA1", "COMPSAN1", 0);
		}
		
		if ( mapName != "dz_map32" )
		Level.ReplaceTextures("COMPSTA2", "COMPSA21", 0);
		
		if ( mapName != "map08" )
		{
			if ( mapName != "ml_map22" )
			{
				if ( mapName != "dz_map32" )
				{
					Level.ReplaceTextures("SPACEW3",  "TVSNOW01", 0);
					Level.ReplaceTextures("COMTAL02",  "TVSNOW01", 0);
				}
			}
		}
		
		if ( mapName != "dz_map32" )
		{
			Level.ReplaceTextures("COMPUTE1",  "COMPUT12",0);
			Level.ReplaceTextures("COMPUTE2",  "COMPUT22",0);
			Level.ReplaceTextures("COMPUTE3",  "COMPUT32",0);
		}
		
		if ( mapName.left(3) != "ja_" )
		{
			if ( mapName != "dz_map32" )
			Level.ReplaceTextures("COMPTALL",  "COMPTAL1",0);
		}
		
		if ( mapName != "dz_map32" )
		{
			Level.ReplaceTextures("COMP2", 	   "COMP2ON1",0);
			Level.ReplaceTextures("SILVER3",   "SILVER32",0);
		}
		
		//Fire Blu
		if ( (mapPrefix != "pr_") )
		{
			Level.ReplaceTextures("FIREBLU1", "ENERGY01", 0);
			Level.ReplaceTextures("FIREBLU2", "ENERGY01", 0);
		}
		
		if ( mapName.left(2) ~== "E3" )
		Level.ReplaceTextures("SW1SKIN", 	"SW1SNAK1",0);
		
		//TNT Textures
		if ( mapPrefix == "tn_" || mapPrefix == "fd_" || mapName.left(6) == "fd_dmm")
		{
			if ( mapPrefix == "tn_" )
			{
				Level.ReplaceTextures("BIGDOOR1", "DRTN2_1",0);
			}
			
			Level.ReplaceTextures("DOBWIRE", 	"EHBWIRE", 0);
			Level.ReplaceTextures("DOBWIRE2", 	"EHBWIRE2", 0);
			Level.ReplaceTextures("TYIRONLG", "TYIRONLG2", 0);
			Level.ReplaceTextures("TYIRONSM", "TYIRONSM2", 0);
			Level.ReplaceTextures("DOGRMSC", 	"DOGRMC2", 0);
			Level.ReplaceTextures("DOGRID", 	 "DOGRI2", 0);
			Level.ReplaceTextures("DORED", 		 "DORED2", 0);
			Level.ReplaceTextures("DOPUNK4",	 "DOPNK42",0);
			Level.ReplaceTextures("DOGLDIR", 	 "DOGLDI2",0);
			Level.ReplaceTextures("PNK4EXIT",	"PK4EXIT2",0);
			Level.ReplaceTextures("TYWHEEL1", 	"TYWHEEL2",0);
			Level.ReplaceTextures("DOWINDOW", 	"DOWINDW2",0);
			Level.ReplaceTextures("LITEGRN1", 	"LITEGRN2",0);
			Level.ReplaceTextures("LITERED1", 	"LITERED2",0);
			Level.ReplaceTextures("DOGLPANL", 	"DOGLPAN2",0);
			Level.ReplaceTextures("MURAL1", 	 "MURAL1B",0);
			Level.ReplaceTextures("MURAL2", 	 "MURAL2B",0);
			Level.ReplaceTextures("STWALL", 	  "STWAL2",0);
			Level.ReplaceTextures("BIGMURAL", 	"BIGMURL2",0);
			Level.ReplaceTextures("LONGWALL", 	"LONGWAL2",0);
			Level.ReplaceTextures("SKIRTING", 	"SKIRTIN2",0);
			Level.ReplaceTextures("BIGWALL", 	 "BIGWAL2",0);
			Level.ReplaceTextures("DRTOPFR", 	 "DRTOPF2",0);
			Level.ReplaceTextures("DRFRONT", 	 "DRFRNT2",0);
			Level.ReplaceTextures("DRSIDE1", 	 "DRSID1B",0);
			Level.ReplaceTextures("DRSIDE2", 	 "DRSID2B",0);
			Level.ReplaceTextures("DRTOPSID", 	"DRTOPSIB",0);
			Level.ReplaceTextures("PILLAR", 	 "PILLAR2",0);
			Level.ReplaceTextures("WEBL", 	 	   "WEBL2",0);
		}
		
		if ( mapName == "tn_map31")
		{
			Level.ReplaceTextures("BIGBRIK1", "STWAL3",0);
			Level.ReplaceTextures("RROCK14","STWALF",0);
		}
		
		if ( mapName == "e3m2" )
        {
			Level.ReplaceTextures("FWATER1", "ENERGYF1",TexMan.NOT_CEILING);
			Level.ReplaceTextures("FWATER2", "ENERGYF1",TexMan.NOT_CEILING);
			Level.ReplaceTextures("FWATER3", "ENERGYF1",TexMan.NOT_CEILING);
			Level.ReplaceTextures("FWATER4", "ENERGYF1",TexMan.NOT_CEILING);
		}
		
		if ( mapName.left(2) ~== "E4" )
		{
			Level.ReplaceTextures("FIRELAVA", "BFALL1", 0);
			Level.ReplaceTextures("FIRELAV2", "BFALL2", 0);
			Level.ReplaceTextures("FIRELAV3", "BFALL3", 0);
		}
		
		if ( mapName == "map31" )
		Level.ReplaceTextures("MIDGRATE", "ZZWOLF15A", 0);
		
		if ( mapName == "map32" )
		Level.ReplaceTextures("MIDGRATE", "ZZWOLF15A", 0);
		
		if ( mapName == "ml_map44" )
		{
			Level.ReplaceTextures("BRONZE1", "KABRON1", 0);
			Level.ReplaceTextures("BROWN1", "KABWN1", 0);
			Level.ReplaceTextures("CRATE1", "KABOX1", 0);
			Level.ReplaceTextures("CRATE2", "KABOX2", 0);
			Level.ReplaceTextures("CRATE3", "KABOX3", 0);
			Level.ReplaceTextures("CRATELIT", "KABOXLIT", 0);
			Level.ReplaceTextures("CRATWIDE", "KABXWIDE", 0);
			Level.ReplaceTextures("STARTAN2", "KSTRTAN2", 0);
			Level.ReplaceTextures("TEKGREN1", "KTEKGRN1", 0);
			Level.ReplaceTextures("TEKGREN2", "KTEKGRN2", 0);
			Level.ReplaceTextures("TEKGREN3", "KTEKGRN3", 0);
			Level.ReplaceTextures("TEKLITE", "KTEKLIT", 0);
			Level.ReplaceTextures("STARGR2", "KSTRGR2", 0);
			Level.ReplaceTextures("DOOR3", "KADR3", 0);
			Level.ReplaceTextures("METAL", "KAMTL", 0);
			Level.ReplaceTextures("METAL2", "KAMTL2", 0);
			
			Level.ReplaceTextures("SW1BRCOM", "SW1KABCP", 0);
			Level.ReplaceTextures("SW2BRCOM", "SW2KABCP", 0);
			Level.ReplaceTextures("SW1BRIK", "SW1KABK", 0);
			Level.ReplaceTextures("SW2BRIK", "SW2KABK", 0);
			Level.ReplaceTextures("SW1BRCOM", "SW1KABCP", 0);
			Level.ReplaceTextures("SW2BRCOM", "SW2KABCP", 0);
			Level.ReplaceTextures("SW1BRN1", "SW1KAB1", 0);
			Level.ReplaceTextures("SW2BRN1", "SW2KAB1", 0);
			Level.ReplaceTextures("SW1MET2", "SW1KAM2", 0);
			Level.ReplaceTextures("SW2MET2", "SW2KAM2", 0);
			Level.ReplaceTextures("SW1TEK", "SW1KTK", 0);
			Level.ReplaceTextures("SW2TEK", "SW2KTK", 0);
			
			Level.ReplaceTextures("SW1COMM", "SW1KASV", 0);
			Level.ReplaceTextures("SW2COMM", "SW2KASV", 0);
		}
		
	}
	
	void Wolfenstein3DTextures()
	{
		if ( Cvar.getcvar("W3D_Text_toggle").getint() == 1 )
		{
			Level.ReplaceTextures("ZZWOLF2", "UNIWOLF1", 0);
			Level.ReplaceTextures("ZZWOLF3", "UNIWOLF2", 0);
			Level.ReplaceTextures("ZZWOLF4", "UNIWOLF3", 0);
			Level.ReplaceTextures("ZZWOLF6", "UNIWOLF4", 0);
			Level.ReplaceTextures("ZZWOLF7", "UNIWOLF5", 0);
			Level.ReplaceTextures("ZZWOLF13", "UNIWOLF6", 0);			
		}		
		else if ( Cvar.getcvar("W3D_Text_toggle").getint() == 2 )
		{
			Level.ReplaceTextures("ZZWOLF2", "GBAWOLF1", 0);
			Level.ReplaceTextures("ZZWOLF3", "GBAWOLF2", 0);
			Level.ReplaceTextures("ZZWOLF4", "GBAWOLF3", 0);
			Level.ReplaceTextures("ZZWOLF6", "GBAWOLF4", 0);
			Level.ReplaceTextures("ZZWOLF7", "GBAWOLF5", 0);
			Level.ReplaceTextures("ZZWOLF13", "GBAWOLF6", 0);			
		}		
		else if ( Cvar.getcvar("W3D_Text_toggle").getint() == 3 )
		{
			Level.ReplaceTextures("ZZWOLF2", "ZZWOLF1", 0);
			Level.ReplaceTextures("ZZWOLF3", "ZZWOLF1", 0);
			Level.ReplaceTextures("ZZWOLF4", "ZZWOLF1", 0);
			Level.ReplaceTextures("ZZWOLF6", "ZZWOLF5", 0);
			Level.ReplaceTextures("ZZWOLF7", "ZZWOLF5", 0);
			Level.ReplaceTextures("ZZWOLF12", "ZZWOLF11", 0);
			Level.ReplaceTextures("ZZWOLF13", "ZZWOLF11", 0);			
		}
	}
	
	void Doom64Doom2Replacements()
    {
		String mapPrefix = level.MapName.Left(3);
        mapPrefix = mapPrefix.MakeLower();
		String mapName = level.MapName.MakeLower();
		if ( mapPrefix == "ab_" )
        {
            Level.ReplaceTextures("BIGDOOR1", "ABIGDOR1", 0);
			Level.ReplaceTextures("CRACKLE2", "64CRACK2", 0);
			Level.ReplaceTextures("CRACKLE4", "64CRACK4", 0);
			Level.ReplaceTextures("SW1STONE", "SW1BRCOM", 0);
			Level.ReplaceTextures("SW2STONE", "SW2BRCOM", 0);
			Level.ReplaceTextures("DEM2_1", "DEM4_1", 0);
			Level.ReplaceTextures("DEM2_2", "DEM4_2", 0);
			Level.ReplaceTextures("DEM2_3", "DEM4_3", 0);
			Level.ReplaceTextures("DEM2_4", "DEM4_4", 0);
        }
	}
	
	//For the Jaguar Doom levels (Level Label "ja_")
	void JaguarDoomReplacements()
	{
		String mapName = level.MapName.MakeLower();
		if ( mapName.Left(3) == "ja_" )
		{
			Level.ReplaceTextures("FLAT14", "FLOOR5_3", 0);
			Level.ReplaceTextures("SP_DUDE4", "GSTONE3", 0);
			Level.ReplaceTextures("CEIL5_1", "SLIME15", 0);
			Level.ReplaceTextures("FLOOR0_6", "RROCK14", 0);
			Level.ReplaceTextures("FLOOR6_1", "FLOOR6_4", 0);
			Level.ReplaceTextures("FLOOR6_2", "RROCK17", 0);
			Level.ReplaceTextures("SW1BRN1", "SW1BRN1A", 0);
			Level.ReplaceTextures("SW2BRN1", "SW2BRN1A", 0);
			Level.ReplaceTextures("FLAT4", "RROCK19", 0);
			Level.ReplaceTextures("COMPSPAN", "COMPSPNJ", 0);
			Level.ReplaceTextures("COMPTALL", "COMPTALJ", 0);
			Level.ReplaceTextures("SP_HOT1", "SP_HOTJ", 0);
			Level.ReplaceTextures("SW1GSTON", "SW1GSTON", 0);
			Level.ReplaceTextures("SW2GSTON", "SW2GSTON", 0);
			Level.ReplaceTextures("SW1HOT", "SW1HOTJ", 0);
			Level.ReplaceTextures("SW2HOT", "SW2HOTJ", 0);
			Level.ReplaceTextures("SW1WOOD", "SW1METL", 0);
			Level.ReplaceTextures("SW2WOOD", "SW2METL", 0);
			Level.ReplaceTextures("BIGDOOR6", "BIGDRJA6", 0);
			Level.ReplaceTextures("GSTSATYR", "GSATYRJA", 0);
		}
	}
	
	void PSX0BRepalcements ()
	{
		String mapName = level.MapName.MakeLower();
		if ( (mapName == "psx02b") || (mapName == "psx03b") )
		{
			Level.ReplaceTextures("BRNPOIS", "BRNPOIS1", TexMan.NOT_FLAT);
			Level.ReplaceTextures("NUKEPOIS", "NUKPOIS1", TexMan.NOT_FLAT);
			Level.ReplaceTextures("BIGDOOR7", "BIGDOR7A", TexMan.NOT_FLAT);
			Level.ReplaceTextures("SHAWN1", "SHAWN1A", TexMan.NOT_FLAT);
			Level.ReplaceTextures("STEP1", "STEP1A", TexMan.NOT_FLAT);
			Level.ReplaceTextures("STEP2", "STEP2A", TexMan.NOT_FLAT);
			Level.ReplaceTextures("STEP3", "STEP3A", TexMan.NOT_FLAT);
			Level.ReplaceTextures("STEP5", "STEP5A", TexMan.NOT_FLAT);
			Level.ReplaceTextures("SW1BRN1", "SW1BRN1A", TexMan.NOT_FLAT);
			Level.ReplaceTextures("SW1STARG", "SW1STARA", TexMan.NOT_FLAT);
			Level.ReplaceTextures("SW1STONE", "SW1STONA", TexMan.NOT_FLAT);
			Level.ReplaceTextures("SW1STON2", "SW1STONB", TexMan.NOT_FLAT);
			Level.ReplaceTextures("SW2BRN1", "SW2BRN1A", TexMan.NOT_FLAT);
			Level.ReplaceTextures("SW2STARG", "SW2STARA", TexMan.NOT_FLAT);
			Level.ReplaceTextures("SW2STONE", "SW2STONA", TexMan.NOT_FLAT);
			Level.ReplaceTextures("SW2STON2", "SW2STONB", TexMan.NOT_FLAT);
		}
	}
	
	void BasePSXMapTextures ()
	{
		String mapName = level.MapName.MakeLower();
		if ( mapName == "psx08" || MapName == "psx09" )
		{
			Level.ReplaceTextures("SW1BLUE", "SW1SKMTL", 0);
		}
	}
	
	void DCXskyreplacement()
	{
		String SkyName = TexMan.GetName(level.skytexture1);
		int flags = TexMan.ReturnFirst;
		String mapPrefix = level.MapName.Left(3);
		String mapName = level.MapName.MakeLower();
		mapPrefix = mapPrefix.MakeLower();
		if ( SkyName == "SKY3" || MapName == "ja_map17" )
		{
			Level.ChangeSky(TexMan.CheckForTexture("SKYX4A",TexMan.Type_Any),TexMan.CheckForTexture("SKYX4A",TexMan.Type_Any));
		}
			
		if ( mapname == "e3m7" || mapname == "cs_e3m7" || mapname == "ch_e3m7" || mapname == "co_e3m7" )
		Level.ReplaceTextures("CEIL4_2", "F_SKY1", 0);
			
		if ( (mapName == "tn_map25") || (mapName == "tn_map26") || (mapName == "tn_map27") || (mapName == "tn_map28") )
		Level.ChangeSky(TexMan.CheckForTexture("SKYX4A",TexMan.Type_Any),TexMan.CheckForTexture("SKYX4A",TexMan.Type_Any));
		
		if (mapName == "tn_map26")
		Level.ReplaceTextures("RROCK04", "RROCK05", 0);
			
		if ( mapName == "tn_map31" || mapName == "tn_map32" )
		Level.ChangeSky(TexMan.CheckForTexture("SKY4",TexMan.Type_Any),TexMan.CheckForTexture("SKY4",TexMan.Type_Any));
		
		if ( mapName.left(2) ~== "E1" || mapName.left(5) == "cs_e1" || mapName.left(5) == "ch_e1" || mapName.left(5) == "co_e1" )
		{
			Level.ReplaceTextures("SKY1", "USKY1", 0);
			Level.ChangeSky(TexMan.CheckForTexture("USKY1",TexMan.Type_Any),TexMan.CheckForTexture("USKY1",TexMan.Type_Any));
		}
		
		if ( SkyName == "SKY2" )
		{
			if (mapName.left(2) ~== "E2" || mapName.left(5) == "cs_e2" || mapName.left(5) == "ch_e2" || mapName.left(5) == "co_e2")
			{
				Level.ReplaceTextures("SKY2", "USKY2", 0);
				Level.ChangeSky(TexMan.CheckForTexture("USKY2",TexMan.Type_Any),TexMan.CheckForTexture("USKY2",TexMan.Type_Any));
			}
		}
		
		if ( (mapName == "ml_map10") || (mapName == "ml_map43") )
		Level.ChangeSky(TexMan.CheckForTexture("SKYX4A",TexMan.Type_Any),TexMan.CheckForTexture("SKYX4A",TexMan.Type_Any));
		
		if ( (mapPrefix == "ab_") )
		{
			if( SkyName == "SKY3TALS" )
			Level.ChangeSky(TexMan.CheckForTexture("SKYX4A",TexMan.Type_Any),TexMan.CheckForTexture("SKYX4A",TexMan.Type_Any));
			if( SkyName == "SKY3ATAS" )
			Level.ChangeSky(TexMan.CheckForTexture("SKYX5A",TexMan.Type_Any),TexMan.CheckForTexture("SKYX5A",TexMan.Type_Any));
		}
			
		if ( (mapPrefix == "nv_") )
		{
			if ( (mapName == "nv_map01") || (mapName == "nv_map02") || (mapName == "nv_map09") )
			{
				Level.ChangeSky(TexMan.CheckForTexture("RSKY2",TexMan.Type_Any),TexMan.CheckForTexture("RSKY2",TexMan.Type_Any));
			}
		}		
	}
	
	void BlankMapTransitions()
	{
		string mapName = Level.MapName.MakeLower();
		if ( mapName.left(6) == "inter_" || mapName == "e4m0" )
		{
				Level.StartSlideShow("BlankMapTransitions");
		}
	}
	
	void ConsoleLevelReplacement()
	{
		//All these here toggle weather or not you play the console maps in the base campain.
		
		String mapName = level.MapName.MakeLower();
		
		if ( mapName == "inter_d1e3" )
		{
			if ( CVar.GetCvar("dcx_playstationmaps").getint() >= 1 )
			{	level.NextMap = "PSX02B";	}
			else if ( CVar.GetCvar("dcx_playstationmaps").getint() == 1 )
			{	level.NextMap = "PSX02";	}
			else
			{	level.NextMap = "e3m1";		}
		}
		
		if ( mapName == "e3m6" )
		{
			if ( CVar.GetCvar("dcx_playstationmaps").getint() >= 1 )
				level.NextSecretMap = "PSX03B";
			else if ( CVar.GetCvar("dcx_playstationmaps").getint() == 1 )
				level.NextSecretMap =  "PSX03";
			else
				level.NextSecretMap = "e3m9";
		}
		
		if ( mapName == "e4m8" )
		{
			if ( CVar.GetCvar("dcx_playstationmaps").getint() >= 1 )
				level.NextMap = "PSX04";
		}
		if ( mapName == "map29" )
		{
			if ( CVar.GetCvar("dcx_playstationmaps").getint() >= 1 )
				level.NextMap = "psx07";
			else
				level.NextMap = "map30";
		}
	}
	
	
	void CabalLevelOrder()
	{
		String mapName = level.MapName.MakeLower();
		
		if ( mapName == "inter_mlcs" )
		{
			if ( CVar.GetCvar("dcx_CabalOrder").getint() >= 1 )
				level.NextMap = "ml_map37"; //Old Doom wiki/WOTM: Bloodflood
			else
				level.NextMap = "ml_map19"; //Default: Bloodsea Keep
		}
		
		if ( mapName == "ml_map19" ) //Bloodsea Keep
		{
			if ( CVar.GetCvar("dcx_CabalOrder").getint() == 2 )
				level.NextMap = "ml_map40"; //WOTM: Temple of Death
			else if ( CVar.GetCvar("dcx_CabalOrder").getint() == 1 )
				level.NextMap = "ml_map38"; //Old Doom wiki: Derelict Station
			else
				level.NextMap = "ml_map37"; //Default: BloodFlood
		}
		
		if ( mapName == "ml_map37" ) //BloodFlood
		{
			if ( CVar.GetCvar("dcx_CabalOrder").getint() == 1 )
				level.NextMap = "ml_map19"; //Old Doom wiki: Bloodsea Keep
			else
				level.NextMap = "ml_map38"; //Default/WOTM: Derelict Station
		}
		
		if ( mapName == "ml_map39" ) //The Watchtower
		{
			if ( CVar.GetCvar("dcx_CabalOrder").getint() == 2 )
				level.NextMap = "ml_map19"; //WOTM: Bloodsea Keep
			else if ( CVar.GetCvar("dcx_CabalOrder").getint() <= 1 )
				level.NextMap = "ml_map20"; //Default/Old Doom wiki: Mephisto's Maosoleum
		}
		
		if ( mapName == "ml_map20" ) //Mephisto's Maosoleum
		{
			if ( CVar.GetCvar("dcx_CabalOrder").getint() == 2 )
				level.NextMap = "ml_map43"; //WOTM: Image Of Evil
			else
				level.NextMap = "ml_map40"; //Default/Old Doom wiki: Temple of Death
		}
		
		if ( mapName == "ml_map40" ) //Temple of Death
		{
			if ( CVar.GetCvar("dcx_CabalOrder").getint() == 2 )
				level.NextMap = "ml_map41"; //WOTM: We Who Are About To Die
			else
				level.NextMap = "ml_map18"; //Default/Old Doom wiki: The Express Elevator To Hell (T.E.E.T.H)
		}
		
		if ( mapName == "ml_map18" ) //The Express Elevator To Hell (T.E.E.T.H)
		{
			if ( CVar.GetCvar("dcx_CabalOrder").getint() == 2 )
				level.NextMap = "ml_map42"; //WOTM: Eye of the storm
			else
				level.NextMap = "ml_map41"; //Default/Old Doom wiki: We Who Are About To Die
		}
		
		if ( mapName == "ml_map21" ) //Bad Dream (Secret map)
		{
			if ( CVar.GetCvar("dcx_CabalOrder").getint() == 2 )
				level.NextMap = "ml_map42"; //WOTM: Eye of the storm
			else
				level.NextMap = "ml_map41"; //Default/Old Doom wiki: We Who Are About To Die
		}		
		
		if ( mapName == "ml_map41" ) //We Who Are About To Die
		{
			if ( CVar.GetCvar("dcx_CabalOrder").getint() == 2 )
				level.NextMap = "ml_map10"; //WOTM: The Black Tower
			else
				level.NextMap = "ml_map42"; //Default/Old Doom wiki: Eye of the storm
		}
		
		if ( mapName == "ml_map42" ) //Eye of the storm
		{
			if ( CVar.GetCvar("dcx_CabalOrder").getint() < 2 )
				level.NextMap = "ml_map10"; //Default/Old Doom wiki: The Black Tower
		}
		
		if ( mapName == "ml_map10" ) //Black Tower
		{
			if ( CVar.GetCvar("dcx_CabalOrder").getint() == 2 )
				level.NextMap = "ml_map20"; //WOTM: Mephisto's Maosoleum
			else
				level.NextMap = "ml_map43"; //Default/Old Doom wiki: Image Of Evil
		}
		
		if ( mapName == "ml_map43" ) //Image Of Evil
		{
			if ( CVar.GetCvar("dcx_CabalOrder").getint() == 2 )
				level.NextMap = "ml_map18"; //WOTM: The Express Elevator To Hell (T.E.E.T.H)	
		}
	}

}

class DCX_PerMapReplacementHandler : EventHandler
{
	override void CheckReplacement(ReplaceEvent e)
	{
		String mapPrefix = level.MapName.Left(3);
        mapPrefix = mapPrefix.MakeLower();
		String mapName = level.MapName.MakeLower();
		if ( Cvar.getcvar("W3D_Text_toggle").getint() == 3 )
		{
			if (e.Replacee == 'Wolfensteinss')
			e.Replacement = 'Zombieman';
		}
		
		If(Cvar.getcvar("Health_Cross_Toggle").getint() == 1)
		{
			if (e.Replacee == 'Stimpack')
			e.Replacement = 'Stimpack_BFG';
			
			if (e.Replacee == 'Medikit')
			e.Replacement = 'Medikit_BFG';
			
			if (e.Replacee == 'Berserk')
			e.Replacement = 'Berserk_BFG';
		}		
		else If(Cvar.getcvar("Health_Cross_Toggle").getint() == 2)
		{
			if (e.Replacee == 'Stimpack')
			e.Replacement = 'Stimpack_unity';
			
			if (e.Replacee == 'Medikit')
			e.Replacement = 'Medikit_unity';
			
			if (e.Replacee == 'Berserk')
			e.Replacement = 'Berserk_unity';
		}
		else If(Cvar.getcvar("Health_Cross_Toggle").getint() == 3)
		{
			if (e.Replacee == 'Stimpack')
			e.Replacement = 'Stimpack_eternal';
			
			if (e.Replacee == 'Medikit')
			e.Replacement = 'Medikit_eternal';
			
			if (e.Replacee == 'Berserk')
			e.Replacement = 'Berserk_eternal';
		}
		
		if ( mapName == "ml_map44")
		{
			if ( CVar.FindCVar("dcx_CustomMonsters").GetBool() )
			{
			//Doomimp
			if (e.Replacee == 'Doomimp')
			{
				e.Replacement = 'SurferMutant1';
			}
			//Shotgunguy
			if (e.Replacee == 'Shotgunguy')
			{
				e.Replacement = 'SurferMutant2';
			}
			//Demon
			if (e.Replacee == 'Demon')
			{
				e.Replacement = 'LoungeSinger';
			}
			//LostSoul
			if (e.Replacee == 'LostSoul')
			{
				e.Replacement = 'BottleOfSpew';
			}
			//SpiderMastermind
			if (e.Replacee == 'SpiderMastermind')
			{
				e.Replacement = 'GiantCanOfSpew';
			}
			//Column
			if (e.Replacee == 'Column')
			{
				e.Replacement = 'Kick_Column';
			}
			//TechLamp
			if (e.Replacee == 'TechLamp')
			{
				e.Replacement = 'Kick_TechLamp';
			}
			//TechPillar
			if (e.Replacee == 'TechPillar')
			{
				e.Replacement = 'Kick_TechPillar';
			}
			
			}
		}
		
		if ( mapPrefix == "ab_" )
		{
			if ( mapName == "ab_map33" )
			{
				if (e.Replacee == 'Zombieman')
				e.Replacement = 'DCX_MarineBotSpawner';		
			}
			
			if ( CVar.FindCVar("dcx_D64D2Xtras").GetBool() )
			{
				if (e.Replacee == 'Chainsaw')
				e.Replacement = 'DCX_DoubleBladedChainsaw';
			
				if (e.Replacee == 'Plasmarifle')
				e.Replacement = 'DCX_HeavyPlasmaGun';
				
				if (e.Replacee == 'Arachnotron')
				e.Replacement = 'DCX_Dualarachnotron';
			
				if (e.Replacee == 'Painelemental')
				e.Replacement = 'DCX_DualPainelemental';
			
				if (e.Replacee == 'LostSoul')
				e.Replacement = 'DCX_ForgottenSoul';
			}
			
			if (e.Replacee == 'Meat4')
			e.Replacement = 'ChooserDemon';
			
			if (e.Replacee == 'Meat3')
			e.Replacement = 'VoodooExploder';
			
			if (e.Replacee == 'BossEye')
			e.Replacement = 'D64D2BossEye';
			
			if (e.Replacee == 'HangBNoBrain')
			e.Replacement = 'HangBNoBrainNS';
			
			if (e.Replacee == 'HangNoGuts')
			e.Replacement = 'HangNoGutsNS';
			
			if (e.Replacee == 'HangTLookingDown')
			e.Replacement = 'HangTLookingDownNS';
			
			if (e.Replacee == 'HangTNoBrain')
			e.Replacement = 'HangTNoBrainNS';
			
			if (e.Replacee == 'HangTSkull')
			e.Replacement = 'HangTSkullNS';
			
			if (e.Replacee == 'BurningBarrel')
			e.Replacement = 'Flames';
			
			if ( mapName == "ab_map30" )
			{
				if (e.Replacee == 'Spidermastermind')
				e.Replacement = 'DCX_Motherdemon';
			}
			
			if ( CVar.FindCVar("dcx_CustomMonsters").GetBool() )
			{			
				if (e.Replacee == 'CommanderKeen')
				e.Replacement = 'DCX_NightmareImp';
			
				if (e.Replacee == 'GibbedMarineExtra')
				e.Replacement = 'DCX_NightmareCacodemon';
			}
			else
			{
				if (e.Replacee == 'CommanderKeen')
				e.Replacement = 'Doomimp';
			
				if (e.Replacee == 'GibbedMarineExtra')
				e.Replacement = 'Cacodemon';
			}
		}
	}
	//Make sure the map specific flags still work for those maps
	override void CheckReplacee (ReplacedEvent e)
	{		
		String mapName = level.MapName.MakeLower();
		
		if (e.Replacement == 'DCX_DualArachnotron')
		e.Replacee = 'Arachnotron';
		
		if (e.Replacement == 'DCX_LesserCyber')
		e.Replacee = 'Cyberdemon';
		
		if (e.Replacement == 'DCX_LesserMastermind')
		e.Replacee = 'Spidermastermind';
		
		if (e.Replacement == 'DCX_Motherdemon')
		e.Replacee = 'Spidermastermind';
	}
}

class DCX_BloodHandler : EventHandler
{
	override void WorldThingSpawned(WorldEvent e)
	{
		if (!e.Thing) return;
		Actor mo = e.Thing;
		if (!mo.bShootable) return;
		CBlood.Process(mo);
	}
}

class DCX_MusicHandler : StaticEventHandler
{
	override void PostUiTick()
	{
		// get map name and currently playing music
		string mapName = level.MapName.MakeLower();
		string music = MusPlaying.Name.MakeLower();
		if ( Cvar.getcvar("W3D_Text_toggle").getint() == 3 )
		{
			if ( (CVar.FindCVar("wf_mus_idkfa").GetBool() ) )
			{
				if ( music == "h_ultima" )
				music = "h_doom";
			
				if ( music == "h_evil" )
				music = "h_doom";
				
				S_ChangeMusic(music);
			}
			else
			{
				if ( music == "d_ultima" )
				music = "d_doom";
			
				if ( music == "d_evil" )
				music = "d_doom";
				
				S_ChangeMusic(music);
			}
		}
		else
		{
			if ( (CVar.FindCVar("wf_mus_idkfa").GetBool() ) )
			{
				if ( mapName == "map31")
				{
					if ( music == "h_doom" )
					music = "h_evil";
				}
			
				if ( mapName == "map32")
				{
					if ( music == "h_doom" )
					music = "h_ultima";
				}
				
				S_ChangeMusic(music);
			}
			else
			{
				if ( mapName == "map31")
				{
					if ( music == "d_doom" )
					music = "d_evil";
				}
			
				if ( mapName == "map32")
				{
					if ( music == "d_doom" )
					music = "d_ultima";
				}
				
				S_ChangeMusic(music);
			}			
		}
				
		if ( (CVar.FindCVar("dcx_3DO_Music").GetBool() ) && (CVar.FindCVar("wf_mus_idkfa").GetBool() != true) && ( mapName.left(3) != "ja_" ) )
		{
			if ( music == "d_e1m1" || music == "d_e2m4" || music == "d_inter")
				music = "o_e1m1";
			
			if ( music == "d_e1m2" || music == "d_e2m5")
				music = "o_e1m2";
			
			if ( music == "d_e1m3" || music == "d_e2m6")
			{
				if ( mapName == "psx01" )
					music = "o_e1m5";
				else
					music = "o_e1m3";
			}
			
			if ( music == "d_e1m4" || music == "d_e2m7")
				music = "o_e1m4";
			
			if ( music == "d_e1m5" || music == "d_e2m8")
				music = "o_e1m5";
			
			if ( music == "d_e1m6" || music == "d_e2m3" || music == "d_e3m7")
				music = "o_e1m6";
			
			if ( music == "d_e1m7" || music == "d_e3m3" || music == "d_victor")
				music = "o_e1m7";
			
			if ( music == "d_e1m8" || music == "d_e2m9" || music == "d_e3m8")
				music = "o_e1m8";
			
			if ( music == "d_e1m9" || music == "d_e3m9" )
				music = "o_e1m9";
			
			if ( music == "d_e2m1" || music == "d_e3m4" )
				music = "o_e2m1";
			
			if ( music == "d_e3m1" || music == "d_e3m6")
				music = "o_e2m9";
			
			if ( music == "d_e3m2" || music == "d_e2m2" || music == "d_e3m5")
			{
				if ( mapName == "psx02" )
					music = "o_e1m9";
				else
					music = "o_e3m2";
			}
			
			if ( music == "d_intro" || music == "d_introa" )
				music = "o_intro";
			
			if ( music == "d_bunny" )
				music = "o_bunny";
				
			S_ChangeMusic(music);
		}
		else
		{
		
		if ( mapName.left(3) != "ja_" )
		{
			if ( music == "o_e1m1" )
			{
				if ( mapName == "e1m1" )
					music = "d_e1m1";
				else if ( mapName == "e2m4" )
					music = "d_e2m4";
				else
					music == "d_inter";
			}
			
			if ( music == "o_e1m2" )
			{
				if ( mapName == "e2m5" )
					music = "d_e2m5";
				else
					music = "d_e1m2";
			}
			
			if ( music == "o_e1m3" )
			{
				if ( mapName == "e2m6" )
					music == "d_e2m6";
				else
					music = "d_e1m3";
			}
			
			if ( music == "o_e1m4" )
			{
				if ( mapName == "e2m7" )
					music == "d_e2m7";
				else
					music = "d_e1m4";
			}
			
			if ( music == "o_e1m5" )
			{
				if ( mapName == "e2m8" )
					music == "d_e2m8";
				else if ( mapName == "psx01" )
					music = "d_e2m6";
				else
					music = "d_e1m5";
			}
			
			if ( music == "o_e1m6" )
			{
				if ( mapName == "e2m3" )
					music = "d_e2m3";
				else if ( mapName == "e3m7" )
					music = "d_e3m7";
				else
					music = "d_e1m6";
			}
			
			if ( music == "o_e1m7" )
			{
				if ( mapName == "e1m7" )
					music = "d_e1m7";
				else if ( mapName == "e3m3" )
					music = "d_e3m3";
				else
					music = "d_victor";
			}
			
			if ( music == "o_e1m8" )
			{
				if ( mapName == "e2m9" )
					music == "d_e2m9";
				else if ( mapName == "e3m8" )
					music = "d_e3m8";
				else
					music = "d_e1m8";
			}
			
			if ( music == "o_e1m9" )
			{
				if ( mapName == "e3m9" )
					music = "d_e3m9";
				else if ( mapName == "psx02" )
					music = "d_e2m2";
				else
					music = "d_e1m9";
			}
			
			if ( music == "o_e2m1" )
			{
				if ( mapName == "e3m4" )
					music == "d_e3m4";
				else
					music = "d_e2m1";
			}
			
			if ( music == "o_e2m9" )
			{
				if ( mapName == "e3m6" )
					music = "d_e3m6";
				else
					music = "d_e3m1";
			}
			
			if ( music == "o_e3m2" )
			{
				if ( mapName == "e2m2" )
					music = "d_e2m2";
				else if ( mapName == "e3m5" )
					music == "d_e3m5";
				else
					music = "d_e3m2";
			}
			
			if ( music == "o_intro" )
				music = "d_intro";
			
			if ( music == "o_bunny" )
				music = "d_bunny";
				
			S_ChangeMusic(music);
			}
		}
	}
}

class CBlood : Actor
{
	Default
	{
		+NOINTERACTION
	}

	static void Process(Actor mo)
	{
		String className = "CBlood" .. mo.GetClassName();
		class<Actor> cls = className;

		Actor blood = NULL;

		if (cls)
		{
			blood = Spawn(cls, mo.Pos, NO_REPLACE);
		}

		if (blood)
		{
			mo.bNoBlood = blood.bNoBlood;
			mo.CopyBloodColor(blood);
			blood.Destroy();
		}
	}
}

class CBloodBaronOfHell : CBlood
{
	Default
	{
		BloodColor "30 67 23";
	}
}

class CBloodHellKnight : CBloodBaronOfHell {}

class CBloodCacodemon : CBlood
{
	Default
	{
		BloodColor "00 00 F9";
	}
}

class CBloodLostSoul : CBlood
{
	Default
	{
		+NOBLOOD
	}
}